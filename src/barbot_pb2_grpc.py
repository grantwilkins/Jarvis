# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import barbot_pb2 as barbot__pb2


class BarbotStub(object):
    """The BarBot service definition.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.PlaceOrder = channel.unary_unary(
                '/Barbot/PlaceOrder',
                request_serializer=barbot__pb2.OrderRequest.SerializeToString,
                response_deserializer=barbot__pb2.OrderReply.FromString,
                )
        self.InjectFlavor = channel.unary_unary(
                '/Barbot/InjectFlavor',
                request_serializer=barbot__pb2.FlavorRequest.SerializeToString,
                response_deserializer=barbot__pb2.FlavorReply.FromString,
                )
        self.QueryLevels = channel.unary_unary(
                '/Barbot/QueryLevels',
                request_serializer=barbot__pb2.LevelRequest.SerializeToString,
                response_deserializer=barbot__pb2.LevelReply.FromString,
                )


class BarbotServicer(object):
    """The BarBot service definition.
    """

    def PlaceOrder(self, request, context):
        """Sends a drink order
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def InjectFlavor(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def QueryLevels(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_BarbotServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'PlaceOrder': grpc.unary_unary_rpc_method_handler(
                    servicer.PlaceOrder,
                    request_deserializer=barbot__pb2.OrderRequest.FromString,
                    response_serializer=barbot__pb2.OrderReply.SerializeToString,
            ),
            'InjectFlavor': grpc.unary_unary_rpc_method_handler(
                    servicer.InjectFlavor,
                    request_deserializer=barbot__pb2.FlavorRequest.FromString,
                    response_serializer=barbot__pb2.FlavorReply.SerializeToString,
            ),
            'QueryLevels': grpc.unary_unary_rpc_method_handler(
                    servicer.QueryLevels,
                    request_deserializer=barbot__pb2.LevelRequest.FromString,
                    response_serializer=barbot__pb2.LevelReply.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'Barbot', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Barbot(object):
    """The BarBot service definition.
    """

    @staticmethod
    def PlaceOrder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Barbot/PlaceOrder',
            barbot__pb2.OrderRequest.SerializeToString,
            barbot__pb2.OrderReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def InjectFlavor(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Barbot/InjectFlavor',
            barbot__pb2.FlavorRequest.SerializeToString,
            barbot__pb2.FlavorReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def QueryLevels(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Barbot/QueryLevels',
            barbot__pb2.LevelRequest.SerializeToString,
            barbot__pb2.LevelReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
